:host {
  /**
   * @prop --switch-toggle-size: Size of the switch toggle control.
  */

  --switch-color-default: var(--sage-color-neutral-grey-400);
  --switch-color-default-hover: var(--sage-color-neutral-grey-500);
  --switch-color-default-focus: var(--sage-color-primary-200);
  --switch-color-default-text: var(--sage-color-neutral-charcoal-300);
  --switch-color-checked: var(--sage-color-neutral-charcoal-400);
  --switch-color-checked-hover: var(--sage-color-neutral-charcoal-500);
  --switch-color-disabled: var(--sage-color-neutral-grey-300);
  --switch-color-disabled-text: var(--sage-color-neutral-charcoal-300);
  --switch-color-disabled-checked: var(--sage-color-neutral-grey-300);
  --switch-color-disabled-checked-text: var(--sage-color-neutral-charcoal-100);
  --switch-color-error: var(--sage-color-red-300);
  --switch-focus-outline-error-color: var(--sage-color-red-200);

  --switch-label-left-spacing: var(--sage-spacing-xs);
  --switch-line-height: var(--sage-line-height-md);
  --switch-border-radius: var(--sage-border-radius-lg);
  --switch-height: 20px;
  --switch-width: 36px;
  --switch-toggle-size: 16px;

  align-items: flex-start;
  color: var(--switch-color-default-text);
  display: inline-flex;
  flex-flow: row wrap;
  margin-bottom: var(--sage-spacing-md);
  position: relative;
}

.sage-switch__input {
  appearance: none;
  background: var(--switch-color-default);
  border: 0;
  border-radius: var(--switch-border-radius);
  color: var(--switch-color-default);
  cursor: pointer;
  display: inline-block;
  height: var(--switch-height);
  margin: 0;
  padding: 0;
  position: relative;
  transform: translateY(2px);
  transition: 0.3s ease-out;
  transition-property: background, border, color;
  vertical-align: top;
  width: var(--switch-width);

  &::after {
    background: var(--sage-color-base-white);
    border-radius: 50%;
    // box-shadow: var(--sage-box-shadow-sm); // TODO: replace with corrected token
    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.12), 0 0 2px 0 rgba(0, 0, 0, 0.08);
    content: "";
    display: block;
    height: var(--switch-toggle-size);
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate3d(-100%, -50%, 0);
    transition: transform 0.2s ease-in-out;
    width: var(--switch-toggle-size);
  }
}

.sage-switch__input ~ .sage-switch__label {
  display: inline-block;
  flex: 1;
  line-height: var(--switch-line-height);
  margin-left: 12px;

  &::after {
    content: "" ;
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
  }
}

// Disabled state
.sage-switch__input:disabled {
  background-color: var(--switch-color-disabled);
  cursor: not-allowed;

  ~ .sage-switch__label {
    color: var(--switch-color-disabled-checked-text);
    cursor: inherit;
  }
}

// Hover state
.sage-switch__input:hover:not(:disabled) {
  background-color: var(--switch-color-default-hover);
}

 // Focus & active state
.sage-switch__input:focus-visible:not(:disabled) {
  box-shadow: 0 0 0 4px var(--switch-color-default-focus);
  outline: none;
}

// Checked input state
.sage-switch__input:checked:not(:disabled) {
  background: currentColor;
  color: var(--switch-color-checked);

  &::after {
    transform: translate3d(0, -50%, 0);
  }

  &:hover {
    // background-color: currentColor;
    border-color: currentColor;
    color: var(--switch-color-checked-hover);
  }
}

