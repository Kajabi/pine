:host {
  display: inline;
}

:host([decoration="underline-dotted"]) > * {
  text-decoration-color: var(--pine-color-grey-600);
  text-decoration-line: underline;
  text-decoration-style: dotted;
  text-decoration-thickness: 12%;
  text-underline-offset: 0.3rem;
  text-underline-position: under;
}

:host([decoration="strikethrough"])>* {
  text-decoration: line-through;
}

// TODO: Update all values to match new semantic tokens, if applicable

/* stylelint-disable */
h1 {
  font-family: "GreetStandard";
  font-size: 28px;
  font-weight: 600;
  letter-spacing: 0.26px;
  line-height: 1.25;
}

h2 {
  font-family: "GreetStandard";
  font-size: 26px;
  font-weight: 600;
  letter-spacing: 0.24px;
  line-height: 1.25;
}

h3 {
  font-family: "GreetStandard";
  font-size: 22px;
  font-weight: 600;
  letter-spacing: 0.22px;
  line-height: 1.25;
}

h4 {
  font-family: "GreetStandard";
  font-size: 20px;
  font-weight: 600;
  letter-spacing: 0.20px;
  line-height: 1.25;
}

h5 {
  font-family: "GreetStandard";
  font-size: 18px;
  font-weight: 500;
  letter-spacing: 0.18px;
  line-height: 1.25;
}

h6 {
  font-family: "GreetStandard";
  font-size: 16px;
  font-weight: 500;
  letter-spacing: 0.16px;
  line-height: 1.25;
}

code, em, p, pre, strong {
  font-family: "Inter";
  font-size: 14px;
  font-weight: 400;
  letter-spacing: -0.16px;
  line-height: 1.425;
}
/* stylelint-enable */

code, pre {
  font-family: monospace;
  letter-spacing: 0;
  line-height: 1;
}

em {
  font-style: normal;
}

strong {
  font-weight: bolder;
}

h1, h2, h3, h4, h5, h6, p, code, pre, em, strong {
  color: var(--pine-color-text-default);
  margin: 0;
}

:host([truncate]) > * {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

:host([italic]) > * {
  font-style: italic
}


// Colors/Variants/Sentiment
$type-colors: (
  primary: var(--pine-color-white),
  secondary: var(--pine-color-grey-800),
  neutral: var(--pine-color-grey-900),
  accent: var(--pine-color-purple-900),
  danger: var(--pine-color-red-900),
  info: var(--pine-color-blue-900),
  success: var(--pine-color-green-900),
  warning: var(--pine-color-yellow-900),
);

@mixin generate-type-colors($type-colors) {
  @each $key, $value in $type-colors {
    .pds-text--color-#{$key} {
      color: $value;
    }
  }
}

@include generate-type-colors($type-colors);

// Font Sizes
$type-sizes: (
  2xl: 20px,
  xl: 18px,
  lg: 16px,
  md: 14px,
  sm: 12px,
  xs: 10px,
  2xs: 8px,
);

@mixin generate-type-sizes($type-sizes) {
  @each $key, $value in $type-sizes {
    .pds-text--size-#{$key} {
      font-size: $value;
    }
  }
}

@include generate-type-sizes($type-sizes);

// Font Weights
$type-weights: (
  extra-light: 200,
  light: 300,
  regular: 400,
  medium: 500,
  semibold: 600,
  bold: 700,
);

@mixin generate-type-weights($type-weights) {
  @each $key, $value in $type-weights {
    .pds-text--weight-#{$key} {
      font-weight: $value;
    }
  }
}

@include generate-type-weights($type-weights);

// Gutter Sizes
$type-gutters: (
  2xl: 48px,
  xl: 40px,
  lg: 32px,
  md: 24px,
  sm: 16px,
  xs: 8px,
  2xs: 4px,
);

@mixin generate-type-gutters($type-gutters) {
  @each $key, $value in $type-gutters {
    .pds-text--gutter-#{$key} {
      margin-block-end: $value;
    }
  }
}

@include generate-type-gutters($type-gutters);

// Text Alignment
$type-alignments: (
  start: start,
  center: center,
  end: end,
  justify: justify,
);

@mixin generate-type-alignments($type-alignments) {
  @each $key, $value in $type-alignments {
    .pds-text--align-#{$key} {
      text-align: $value;
    }
  }
}

@include generate-type-alignments($type-alignments);
