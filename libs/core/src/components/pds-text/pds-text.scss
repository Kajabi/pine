:host {
  display: block;
}

// TODO: Update all values to match new semantic tokens

h1 {
  font-family: "GreetStandard";
  font-size: 28px;
  font-weight: 600;
  letter-spacing: 0.26px;
}

h2 {
  font-family: "GreetStandard";
  font-size: 26px;
  font-weight: 600;
  letter-spacing: 0.24px;
}

h3 {
  font-family: "GreetStandard";
  font-size: 22px;
  font-weight: 600;
  letter-spacing: 0.22px;
}

h4 {
  font-family: "GreetStandard";
  font-size: 20px;
  font-weight: 600;
  letter-spacing: 0.20px;
}

h5 {
  font-family: "GreetStandard";
  font-size: 18px;
  font-weight: 500;
  letter-spacing: 0.18px;
}

h6 {
  font-family: "GreetStandard";
  font-size: 16px;
  font-weight: 500;
  letter-spacing: 0.16px;
}

p {
  font-family: "Inter";
  font-size: 14px;
  font-weight: 400;
  letter-spacing: -0.16px;
}

// Font Sizes
$type-sizes: (
  2xl: 20px,
  xl: 18px,
  lg: 16px,
  md: 14px,
  sm: 12px,
  xs: 10px,
  2xs: 8px,
);

@mixin generate-type-sizes($type-sizes) {
  @each $key, $value in $type-sizes {
    .pds-text--size-#{$key} {
      font-size: $value;
    }
  }
}

@include generate-type-sizes($type-sizes);

// Font Weights
$type-weights: (
  regular: 400,
  medium: 500,
  semi-bold: 600,
  bold: 700,
);

@mixin generate-type-weights($type-weights) {
  @each $key, $value in $type-weights {
    .pds-text--weight-#{$key} {
      font-weight: $value;
    }
  }
}

@include generate-type-weights($type-weights);

// Text Alignment
$type-alignments: (
  start: start,
  center: center,
  end: end,
  justify: justify,
);

@mixin generate-type-alignments($type-alignments) {
  @each $key, $value in $type-alignments {
    .pds-text--align-#{$key} {
      text-align: $value;
    }
  }
}

@include generate-type-alignments($type-alignments);
