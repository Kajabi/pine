:host {
  --box-background-color: inherit;
  --box-border-color: inherit;
  --box-min-height: none;
  --box-min-width: none;

  display: block;
}

img {
  width: 100%;
}

[class*='pds-layout-box'] {
  background-color: var(--box-background-color);
  box-sizing: border-box;
  display: inline-flex;
  min-height: var(--box-min-height);;
  min-width: var(--box-min-width);

  // The immediate child of the row will fit the width of the row
  .pds-layout-row > & {
    position: relative;
    width: 100%;
  }
}

// Spacing mixin
$pine-spacing-tokens: (
  xxs: 4px,
  xs: 8px,
  sm: 16px,
  md: 24px,
  lg: 36px,
  xl: 48px,
  2xl: 64px,
);

@mixin generate-spacing-classes($directions, $tokens) {
  @each $direction in $directions {
    @each $key, $value in $tokens {
      /* stylelint-disable-next-line function-no-unknown */
      $class-name: if($direction, 'pds-spacing-#{$direction}-#{$key}', 'pds-spacing-#{$key}');
      .#{$class-name} {
        @if $direction == 'top' {
          margin-block-start: $value;
        } @else if $direction == 'bottom' {
          margin-block-end: $value;
        } @else if $direction == 'left' {
          margin-inline-start: $value;
        } @else if $direction == 'right' {
          margin-inline-end: $value;
        } @else {
          margin: $value;
        }
      }
    }
  }
}

@include generate-spacing-classes(false, $pine-spacing-tokens);
@include generate-spacing-classes('top', $pine-spacing-tokens);
@include generate-spacing-classes('right', $pine-spacing-tokens);
@include generate-spacing-classes('left', $pine-spacing-tokens);
@include generate-spacing-classes('bottom', $pine-spacing-tokens);


@mixin generate-columns($prefix, $columns) {
  @for $i from 0 through $columns {
    /* stylelint-disable-next-line function-no-unknown */
    $class-name: if($prefix, 'pds-layout-box-#{$prefix}-#{$i}', 'pds-layout-box-#{$i}');
    .#{$class-name} {
      @if $i == 0 {
        display: none;
      } @else {
        display: inline-flex;
        flex: calc($i / $columns * 100%);
        max-width: calc($i / $columns * 100%);
      }
    }
  }
}

@mixin generate-column-offsets($prefix, $columns) {
  @for $i from 0 through $columns {
    /* stylelint-disable-next-line function-no-unknown */
    $class-name: if($prefix, 'pds-layout-box-offset-#{$prefix}-#{$i}', 'pds-layout-box-offset-#{$i}');
    .#{$class-name} {
      @if $i == 0 {
        margin-inline-start: 0;
      } @else {
        margin-inline-start: calc($i / $columns * 100%);
      }
    }
  }
}

// Base offset classes
@include generate-column-offsets(false, 12);

// Responsive offset classes
@media (max-width: 575px) {
  @include generate-column-offsets('xs', 12);
}

@media (min-width: 576px) {
  @include generate-column-offsets('sm', 12);
}

@media (min-width: 768px) {
  @include generate-column-offsets('md', 12);
}

@media (min-width: 992px) {
  @include generate-column-offsets('lg', 12);
}

@media (min-width: 1200px) {
  @include generate-column-offsets('xl', 12);
}


// Base column width classes
@include generate-columns(false, 12);

// Responsive column width classes
@media (max-width: 575px) {
  @include generate-columns('xs', 12);
}

@media (min-width: 576px) {
  @include generate-columns('sm', 12);
}

@media (min-width: 768px) {
  @include generate-columns('md', 12);
}

@media (min-width: 992px) {
  @include generate-columns('lg', 12);
}

@media (min-width: 1200px) {
  @include generate-columns('xl', 12);
}

.pds-layout-box {
  flex-basis: 0;
  flex-grow: 1;
}

.pds-layout-box--auto {
  flex: 0 0 fit-content;
  min-width: auto;
  width: auto;
}

.pds-layout-box--fit {
  max-width: 100%;
  min-width: 100%;
  width: 100%;
}

.pds-layout-box--bordered {
  border-color: var(--box-border-color, var(--pine-border-default-color));
  border-style: var(--pine-border-default-style);
  border-width: var(--pine-border-default-width);
}

// Display helpers
.pds-layout-box--display-flex {
  display: flex;
}

.pds-layout-box--display-inline-flex {
  display: inline-flex;
}

.pds-layout-box--display-block {
  display: block;
}

.pds-layout-box--display-inline-block {
  display: inline-block;
}

// Flex helpers
.pds-layout-box--flex-none {
  flex: 0 0 auto;
}

.pds-layout-box--flex-grow {
  flex: 1 1 auto
}

.pds-layout-box--flex-shrink {
  flex: 0 0 auto;
}

// Border radius helpers
.pds-border-radius-none {
  border-radius: 0;
}

.pds-border-radius-xs {
  border-radius: var(--pine-border-radius-xs);
}

.pds-border-radius-sm {
  border-radius: var(--pine-border-radius-sm);
}

.pds-border-radius-md {
  border-radius: var(--pine-border-radius-md);
}

.pds-border-radius-lg {
  border-radius: var(--pine-border-radius-lg);
}

.pds-border-radius-circle {
  border-radius: 50%;
}

// Box shadow helpers
.pds-shadow-xs {
  box-shadow: var(--pine-box-shadow-xs);
}

.pds-shadow-sm {
  box-shadow: var(--pine-box-shadow-sm);
}

.pds-shadow-md {
  box-shadow: var(--pine-box-shadow-md);
}

.pds-shadow-lg {
  box-shadow: var(--pine-box-shadow-lg);
}

// Gap helpers
.pds-layout-box-gap-none {
  gap: 0;
}

.pds-layout-box-gap-xxs {
  gap: var(--pine-spacing-xxs);
}

.pds-layout-box-gap-xs {
  gap: var(--pine-spacing-xxs);
}

.pds-layout-box-gap-sm {
  gap: var(--pine-spacing-sm);
}

.pds-layout-box-gap-md {
  gap: var(--pine-spacing-md);
}

.pds-layout-box-gap-lg {
  gap: var(--pine-spacing-lg);
}

.pds-layout-box-gap-xl {
  gap: var(--pine-spacing-xl);
}

.pds-layout-box-gap-xxl {
  gap: var(--pine-spacing-2xl);
}

// Spacing helpers
.pds-padding-none {
  padding: 0;
}

.pds-padding-xxs {
  padding: var(--pine-spacing-xxs);
}

.pds-padding-xs {
  padding: var(--pine-spacing-xxs);
}

.pds-padding-sm {
  padding: var(--pine-spacing-sm);
}

.pds-padding-md {
  padding: var(--pine-spacing-md);
}

.pds-padding-lg {
  padding: var(--pine-spacing-lg);
}

.pds-padding-xl {
  padding: var(--pine-spacing-xl);
}

.pds-padding-xxl {
  padding: var(--pine-spacing-2xl);
}

// Display helpers
.pds-layout-box-display-flex {
  display: flex;
}

.pds-layout-box-display-inline-flex {
  display: inline-flex;
}

// Flex Direction helpers
.pds-layout-box-direction-row {
  flex-direction: row;
}

.pds-layout-box-direction-column {
  flex-direction: column;
}

// Justify Content helpers
.pds-justify-content-start {
  justify-content: start;
}

.pds-justify-content-center {
  justify-content: center;
}

.pds-justify-content-end {
  justify-content: end;
}

.pds-justify-content-space-between {
  justify-content: space-between;
}

.pds-justify-content-space-around {
  justify-content: space-around;
}

.pds-justify-content-space-evenly {
  justify-content: space-evenly;
}

// Align Items helpers
.pds-align-items-start {
  align-items: start;
}

.pds-align-items-center {
  align-items: center;
}

.pds-align-items-end {
  align-items: end;
}

.pds-align-items-stretch {
  align-items: stretch;
}

.pds-align-items-baseline {
  align-items: baseline;
}
