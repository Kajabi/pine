:root {
  --pine-columns: 12;
  --pine-gap: var(--pine-spacing-md);
}
/* Generate the class names the starting grid column
*/
@mixin generate-column-start($columns) {
  @for $i from 1 through $columns {
    .pds-grid-start-#{$i} {
      grid-column-start: $i;
    }
  }
}

/* Generate the class names the ending grid column
*/
@mixin generate-column-end($columns) {
  @for $i from 1 through $columns {
    .pds-grid-end-#{$i} {
      grid-column-end: $i;
    }
  }
}

/* Generate the class names of the responsive grid system. Include the prefix in the
class name if a prefix exists, otherwise omit from the class name
*/
@mixin generate-columns($prefix, $columns) {
  @for $i from 1 through $columns {
    /* stylelint-disable-next-line function-no-unknown */
    $class-name: if($prefix, 'pds-grid-col-#{$prefix}-#{$i}', 'pds-grid-col-#{$i}');
    .#{$class-name} {
      grid-column: auto / span $i;
    }
  }
}

:host {
  display: block;
}

.pds-grid {
  display: grid;
  // todo why is pine gap not working here if no shadow DOM
  // it is defined above in the host
  gap: var(--pine-gap);
  grid-template-columns: repeat(var(--pine-columns, 12), 1fr);
  
  /**
  * Resets the grid-column to span the full width of the grid
  */
  > * {
    grid-column: auto / span 12;
  }
}

// Base Classes
@include generate-columns(false, 12);

/* Responsive Classes */
@media (max-width: 575px) {
  @include generate-columns('xs', 12);
}

@media (min-width: 576px) {
  @include generate-columns('sm', 12);
}

@media (min-width: 768px) {
  @include generate-columns('md', 12);
}

@media (min-width: 992px) {
  @include generate-columns('lg', 12);
}

@media (min-width: 1200px) {
  @include generate-columns('xl', 12);
}

@include generate-column-start(12);

@include generate-column-end(12);

// Do we add just the class for more utility or add the functionality 
// within the component to then use the css from the class

// Grid Column Alignment helpers
.pds-justify-content-start {
  justify-content: start;
}

.pds-justify-content-center {
  justify-content: center;
}

.pds-justify-content-end {
  justify-content: end;
}

.pds-justify-content-space-between {
  justify-content: space-between;
}

.pds-justify-content-space-around {
  justify-content: space-around;
}

.pds-justify-content-space-evenly {
  justify-content: space-evenly;
}

.pds-align-items-start {
  align-self: start;
}

.pds-align-items-center {
  align-self: center;
}

.pds-align-items-end {
  align-self: end;
}

.pds-align-items-stretch {
  align-self: stretch;
}

.pds-align-items-baseline {
  align-self: baseline;
}

// DEMO STYLES
.pds-grid-demo .pds-grid-col {
  border: var(--pine-border-default);
}
