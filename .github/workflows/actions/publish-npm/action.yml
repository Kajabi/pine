name: Publish
description: Publishes a package

inputs:
  folder:
    default: './'
    description: 'A folder containing a package.json file.'

  preid:
    default: ''
    description: 'The prerelease id used when doing a prerelease.'

  project:
    description: 'The name of the project based on Nx naming.'

  tag:
    description: 'The tag to publish on NPM.'

  token:
    description: The NPM authentication token required to publish.

  version:
    description: The type of version to release.

  working-directory:
    description: 'The directory of the package.'

runs:
  using: 'composite'
  steps:
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        registry-url: 'https://registry.npmjs.org'

    - name: Install Dependencies
      run: npm ci --legacy-peer-deps --ignore-scripts
      shell: bash

    - name: Update Version
      run: npx lerna version ${{ inputs.version }} --yes --exact --no-changelog --no-push --no-git-tag-version --preid=${{ inputs.preid }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Run Build
      run: npx nx run ${{ inputs.project }}:build
      shell: bash

    - name: Prepare NPM Token
      run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} >> .npmrc
      shell: bash
      env:
        NPM_TOKEN: ${{ inputs.token }}

    - name: Publish to NPM
      run: npm publish ${{ inputs.folder }} --tag ${{ inputs.tag }} --provenance --access public
      shell: bash
      working-directory: ${{ inputs.working-directory }}
